************************* Template Classes *****************************************
Template classes são classes declaradas com uma tipagem generica T.
Template<class T>

Com essa nomenclatura, de uma maneira que lembra muito o TypeScript, uma variável ou função
do tipo T pode assumir varios tipos, a depender do que lhe for passado.

template<class T>
class Arithametic
{
    private:
    T a;
    T b;

    public:
    Arithametic(T a, T b);
    T add();
    T sub();
};

template<class T>
Arithametic<T>::Arithametic(T a, T b)
{
    this->a = a;
    this->b = b;
}
template<class T>
T Arithametic<T>::add()
{
    T c;
    c = a+b;
    return c;
}
template<class T>
T Arithametic<T>:: sub()
{
    T c;
    c = a - b;
    return c;
}

int main()
{
    Arithmetic<int> ar1(50,53);
    Arithmetic<char> ar2(50,53);
    cout<<"Add1: "<<ar1.add()<<endl; //Aqui, como o tipo é int, o valor numerico será printado
    cout<<"Add2: "<<ar2.add()<<endl; //Aqui, como o tipo é char, uma letra será printada
    return 0;
}